{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./PerspectiveShiftScreen.scss\";\nimport ThoughtIntros from \"../components/ThoughtIntros\"; // <-- Nowy import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PerspectiveShiftScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showIntro, setShowIntro] = useState(true); // <-- Stan do kontroli intra\n  const [displayText, setDisplayText] = useState(\"\");\n  const [showInput, setShowInput] = useState(false);\n  const [textIsVisible, setTextIsVisible] = useState(true);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageHistory, setMessageHistory] = useState([]);\n\n  // Funkcja, która zostanie wywołana po zakończeniu intra\n  const handleIntroComplete = () => {\n    setShowIntro(false);\n    setDisplayText(\"A jaka myśl Tobie teraz ciąży?\");\n    setShowInput(true);\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n    const newUserMessage = {\n      role: \"user\",\n      content: input\n    };\n    const updatedHistory = [...messageHistory, newUserMessage];\n    setMessageHistory(updatedHistory);\n    setShowInput(false);\n    setTextIsVisible(false);\n    setIsLoading(true);\n    setTimeout(async () => {\n      let endpoint = \"\";\n      let payload = {};\n      if (updatedHistory.length === 1) {\n        endpoint = \"/api/get-reframing-question\";\n        payload = {\n          thought: input\n        };\n      } else if (updatedHistory.length === 3) {\n        endpoint = \"/api/get-conclusion\";\n        payload = {\n          negative_thought: updatedHistory[0].content,\n          reframed_thought: input\n        };\n      }\n      try {\n        const response = await fetch(`http://localhost:5001${endpoint}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        const data = await response.json();\n        const responseText = data.question || data.conclusion;\n        setMessageHistory(prev => [...prev, {\n          role: \"assistant\",\n          content: responseText\n        }]);\n        setIsLoading(false);\n        setDisplayText(responseText);\n        setTextIsVisible(true);\n        if (updatedHistory.length < 3) {\n          setShowInput(true);\n        } else {\n          //   setTimeout(() => navigate(\"/\"), 12000); // Wróć do domu po 12s\n        }\n      } catch (error) {\n        console.error(\"Błąd serwera:\", error);\n        setIsLoading(false);\n        setShowInput(true);\n      }\n    }, 500);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"perspective-screen\",\n    children: showIntro ? /*#__PURE__*/_jsxDEV(ThoughtIntros, {\n      onComplete: handleIntroComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-text-area\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thinking-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-content ${textIsVisible ? \"visible\" : \"hidden\"}`,\n          children: displayText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), showInput && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"thought-form single-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Wpisz tutaj...\",\n          disabled: isLoading,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !input.trim(),\n          children: \"Wy\\u015Blij\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(PerspectiveShiftScreen, \"rgJMctCLEF/vid/y406TeRDqlwk=\", false, function () {\n  return [useNavigate];\n});\n_c = PerspectiveShiftScreen;\nexport default PerspectiveShiftScreen;\nvar _c;\n$RefreshReg$(_c, \"PerspectiveShiftScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ThoughtIntros","jsxDEV","_jsxDEV","Fragment","_Fragment","PerspectiveShiftScreen","_s","navigate","showIntro","setShowIntro","displayText","setDisplayText","showInput","setShowInput","textIsVisible","setTextIsVisible","input","setInput","isLoading","setIsLoading","messageHistory","setMessageHistory","handleIntroComplete","handleSendMessage","e","preventDefault","trim","newUserMessage","role","content","updatedHistory","setTimeout","endpoint","payload","length","thought","negative_thought","reframed_thought","response","fetch","method","headers","body","JSON","stringify","data","json","responseText","question","conclusion","prev","error","console","className","children","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","disabled","autoFocus","type","_c","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./PerspectiveShiftScreen.scss\";\nimport ThoughtIntros from \"../components/ThoughtIntros\"; // <-- Nowy import\n\nconst PerspectiveShiftScreen = () => {\n  const navigate = useNavigate();\n  const [showIntro, setShowIntro] = useState(true); // <-- Stan do kontroli intra\n  const [displayText, setDisplayText] = useState(\"\");\n  const [showInput, setShowInput] = useState(false);\n  const [textIsVisible, setTextIsVisible] = useState(true);\n\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageHistory, setMessageHistory] = useState([]);\n  \n  // Funkcja, która zostanie wywołana po zakończeniu intra\n  const handleIntroComplete = () => {\n      setShowIntro(false);\n      setDisplayText(\"A jaka myśl Tobie teraz ciąży?\");\n      setShowInput(true);\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n\n    const newUserMessage = { role: \"user\", content: input };\n    const updatedHistory = [...messageHistory, newUserMessage];\n\n    setMessageHistory(updatedHistory);\n    setShowInput(false);\n    setTextIsVisible(false);\n    setIsLoading(true);\n\n    setTimeout(async () => {\n      let endpoint = \"\";\n      let payload = {};\n\n      if (updatedHistory.length === 1) {\n        endpoint = \"/api/get-reframing-question\";\n        payload = { thought: input };\n      } else if (updatedHistory.length === 3) {\n        endpoint = \"/api/get-conclusion\";\n        payload = {\n          negative_thought: updatedHistory[0].content,\n          reframed_thought: input,\n        };\n      }\n\n      try {\n        const response = await fetch(`http://localhost:5001${endpoint}`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        });\n        const data = await response.json();\n\n        const responseText = data.question || data.conclusion;\n        setMessageHistory((prev) => [...prev, { role: \"assistant\", content: responseText }]);\n        setIsLoading(false);\n        setDisplayText(responseText);\n        setTextIsVisible(true);\n\n        if (updatedHistory.length < 3) {\n          setShowInput(true);\n        } else {\n        //   setTimeout(() => navigate(\"/\"), 12000); // Wróć do domu po 12s\n        }\n      } catch (error) {\n        console.error(\"Błąd serwera:\", error);\n        setIsLoading(false);\n        setShowInput(true);\n      }\n    }, 500);\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"perspective-screen\">\n      {showIntro ? (\n        <ThoughtIntros onComplete={handleIntroComplete} />\n      ) : (\n        <>\n          <div className=\"display-text-area\">\n            {isLoading ? (\n              <div className=\"thinking-indicator\"><span></span><span></span><span></span></div>\n            ) : (\n              <div className={`text-content ${textIsVisible ? \"visible\" : \"hidden\"}`}>\n                {displayText}\n              </div>\n            )}\n          </div>\n\n          {showInput && (\n            <form onSubmit={handleSendMessage} className=\"thought-form single-view\">\n              <textarea\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Wpisz tutaj...\"\n                disabled={isLoading}\n                autoFocus\n              />\n              <button type=\"submit\" disabled={isLoading || !input.trim()}>Wyślij</button>\n            </form>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PerspectiveShiftScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}