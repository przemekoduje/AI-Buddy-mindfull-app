{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PerspectiveShiftScreen.scss';\nimport ShatterAnimation from '../components/ShatterAnimation'; // Komponent animacji, który zaraz stworzymy\n\n// Mockowa funkcja AI, która analizuje myśl\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getReframingQuestion = thought => {\n  if (thought.includes('zawsze') || thought.includes('nigdy')) {\n    return \"Czy na pewno tak jest w 100% przypadków?\";\n  }\n  if (thought.includes('muszę') || thought.includes('powinienem')) {\n    return \"Jakie założenie kryje się za tym przekonaniem?\";\n  }\n  return \"Jak inaczej można spojrzeć na tę sytuację?\";\n};\nconst PerspectiveShiftScreen = () => {\n  _s();\n  const [step, setStep] = useState('inputNegative');\n  const [negativeThought, setNegativeThought] = useState('');\n  const [positiveThought, setPositiveThought] = useState('');\n  const [reframingQuestion, setReframingQuestion] = useState('');\n  const [input, setInput] = useState(''); // Lokalny stan dla pola tekstowego\n\n  const handleNegativeSubmit = e => {\n    e.preventDefault();\n    setNegativeThought(input);\n    setReframingQuestion(getReframingQuestion(input)); // \"Wywołanie\" AI\n    setInput('');\n    setStep('inputPositive');\n  };\n  const handlePositiveSubmit = e => {\n    e.preventDefault();\n    setPositiveThought(input);\n    setStep('animating');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"perspective-screen\",\n    children: [step === 'inputNegative' && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNegativeSubmit,\n      className: \"thought-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Jaka my\\u015Bl Ci teraz ci\\u0105\\u017Cy?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Zamknij w kuli\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), step === 'inputPositive' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-sphere\",\n        children: negativeThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePositiveSubmit,\n        className: \"thought-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: reframingQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Rozbij kul\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), step === 'animating' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ShatterAnimation, {\n        text: negativeThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"positive-thought-reveal\",\n        children: positiveThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PerspectiveShiftScreen, \"q77xfQ4C3K8MAJFEUOpzD22qgJE=\");\n_c = PerspectiveShiftScreen;\nexport default PerspectiveShiftScreen;\nvar _c;\n$RefreshReg$(_c, \"PerspectiveShiftScreen\");","map":{"version":3,"names":["React","useState","useEffect","ShatterAnimation","jsxDEV","_jsxDEV","Fragment","_Fragment","getReframingQuestion","thought","includes","PerspectiveShiftScreen","_s","step","setStep","negativeThought","setNegativeThought","positiveThought","setPositiveThought","reframingQuestion","setReframingQuestion","input","setInput","handleNegativeSubmit","e","preventDefault","handlePositiveSubmit","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","autoFocus","type","text","_c","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PerspectiveShiftScreen.scss';\nimport ShatterAnimation from '../components/ShatterAnimation'; // Komponent animacji, który zaraz stworzymy\n\n// Mockowa funkcja AI, która analizuje myśl\nconst getReframingQuestion = (thought) => {\n  if (thought.includes('zawsze') || thought.includes('nigdy')) {\n    return \"Czy na pewno tak jest w 100% przypadków?\";\n  }\n  if (thought.includes('muszę') || thought.includes('powinienem')) {\n    return \"Jakie założenie kryje się za tym przekonaniem?\";\n  }\n  return \"Jak inaczej można spojrzeć na tę sytuację?\";\n};\n\n\nconst PerspectiveShiftScreen = () => {\n  const [step, setStep] = useState('inputNegative');\n  const [negativeThought, setNegativeThought] = useState('');\n  const [positiveThought, setPositiveThought] = useState('');\n  const [reframingQuestion, setReframingQuestion] = useState('');\n  const [input, setInput] = useState(''); // Lokalny stan dla pola tekstowego\n\n  const handleNegativeSubmit = (e) => {\n    e.preventDefault();\n    setNegativeThought(input);\n    setReframingQuestion(getReframingQuestion(input)); // \"Wywołanie\" AI\n    setInput('');\n    setStep('inputPositive');\n  };\n\n  const handlePositiveSubmit = (e) => {\n    e.preventDefault();\n    setPositiveThought(input);\n    setStep('animating');\n  };\n\n  return (\n    <div className=\"perspective-screen\">\n      \n      {step === 'inputNegative' && (\n        <form onSubmit={handleNegativeSubmit} className=\"thought-form\">\n          <label>Jaka myśl Ci teraz ciąży?</label>\n          <textarea value={input} onChange={(e) => setInput(e.target.value)} autoFocus />\n          <button type=\"submit\">Zamknij w kuli</button>\n        </form>\n      )}\n\n      {step === 'inputPositive' && (\n        <>\n          <div className=\"glass-sphere\">\n            {negativeThought}\n          </div>\n          <form onSubmit={handlePositiveSubmit} className=\"thought-form\">\n            <label>{reframingQuestion}</label>\n            <textarea value={input} onChange={(e) => setInput(e.target.value)} autoFocus />\n            <button type=\"submit\">Rozbij kulę</button>\n          </form>\n        </>\n      )}\n\n      {step === 'animating' && (\n        <>\n          <ShatterAnimation text={negativeThought} />\n          <div className=\"positive-thought-reveal\">\n            {positiveThought}\n          </div>\n        </>\n      )}\n\n    </div>\n  );\n};\n\nexport default PerspectiveShiftScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}