{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/BreathingSession.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport BreathingAnimation from '../components/BreathingAnimation';\nimport ControlPanel from '../components/ControlPanel';\nimport './BreathingSession.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BreathingSession = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const durationInSeconds = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.duration) || 60;\n  const cycleTime = 8000;\n  const [isReady, setIsReady] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [remainingTime, setRemainingTime] = useState(durationInSeconds);\n  const [text, setText] = useState('Inhale');\n  const [countdown, setCountdown] = useState(3);\n\n  // Efekt 1: Poprawiony timer do zarządzania odliczaniem 3, 2, 1\n  useEffect(() => {\n    // ZMIANA 1: Czekamy 1 sekundę, zanim rozpoczniemy odliczanie\n    const initialDelay = setTimeout(() => {\n      const countdownInterval = setInterval(() => {\n        setCountdown(prevCountdown => {\n          if (prevCountdown <= 1) {\n            clearInterval(countdownInterval);\n            setIsReady(true);\n            return '';\n          }\n          return prevCountdown - 1;\n        });\n      }, 1000);\n\n      // Funkcja czyszcząca dla interwału\n      return () => clearInterval(countdownInterval);\n    }, 1000); // 1-sekundowe opóźnienie\n\n    // Funkcja czyszcząca dla początkowego opóźnienia\n    return () => clearTimeout(initialDelay);\n  }, []); // Uruchamia się tylko raz\n\n  // Efekt 2: Główny timer sesji (bez zmian)\n  useEffect(() => {\n    if (isReady && !isPaused && remainingTime > 0) {\n      const interval = setInterval(() => {\n        setRemainingTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n    if (remainingTime <= 0) {\n      navigate('/breathe');\n    }\n  }, [isReady, isPaused, remainingTime, navigate]);\n\n  // Efekt 3: ZMIANA 2 - Poprawiony timer do zmiany tekstu Inhale/Exhale\n  useEffect(() => {\n    if (isReady && !isPaused) {\n      // Resetujemy tekst do \"Inhale\" przy każdym wznowieniu, aby zapewnić synchronizację\n      setText('Inhale');\n      const textInterval = setInterval(() => {\n        setText(prevText => prevText === 'Inhale' ? 'Exhale' : 'Inhale');\n      }, cycleTime / 2);\n      return () => clearInterval(textInterval);\n    }\n  }, [isReady, isPaused]); // Zależny od gotowości i pauzy\n\n  const handlePlayPause = () => {\n    if (isReady) {\n      setIsPaused(prevState => !prevState);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"session-screen\",\n    children: [/*#__PURE__*/_jsxDEV(BreathingAnimation, {\n      isPaused: isPaused,\n      isReady: isReady,\n      text: text,\n      countdown: countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-screen__panel-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ControlPanel, {\n        onPlayPause: handlePlayPause,\n        isPlaying: !isPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(BreathingSession, \"QEpHPW1I93Pe0jmwGSqcVyNb/nc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = BreathingSession;\nexport default BreathingSession;\nvar _c;\n$RefreshReg$(_c, \"BreathingSession\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","useNavigate","BreathingAnimation","ControlPanel","jsxDEV","_jsxDEV","BreathingSession","_s","_location$state","navigate","location","durationInSeconds","state","duration","cycleTime","isReady","setIsReady","isPaused","setIsPaused","remainingTime","setRemainingTime","text","setText","countdown","setCountdown","initialDelay","setTimeout","countdownInterval","setInterval","prevCountdown","clearInterval","clearTimeout","interval","prevTime","textInterval","prevText","handlePlayPause","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPlayPause","isPlaying","_c","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/BreathingSession.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport BreathingAnimation from '../components/BreathingAnimation';\nimport ControlPanel from '../components/ControlPanel';\nimport './BreathingSession.scss';\n\nconst BreathingSession = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const durationInSeconds = location.state?.duration || 60;\n  const cycleTime = 8000;\n\n  const [isReady, setIsReady] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [remainingTime, setRemainingTime] = useState(durationInSeconds);\n  const [text, setText] = useState('Inhale');\n  const [countdown, setCountdown] = useState(3);\n\n  // Efekt 1: Poprawiony timer do zarządzania odliczaniem 3, 2, 1\n  useEffect(() => {\n    // ZMIANA 1: Czekamy 1 sekundę, zanim rozpoczniemy odliczanie\n    const initialDelay = setTimeout(() => {\n      const countdownInterval = setInterval(() => {\n        setCountdown(prevCountdown => {\n          if (prevCountdown <= 1) {\n            clearInterval(countdownInterval);\n            setIsReady(true);\n            return '';\n          }\n          return prevCountdown - 1;\n        });\n      }, 1000);\n      \n      // Funkcja czyszcząca dla interwału\n      return () => clearInterval(countdownInterval);\n    }, 1000); // 1-sekundowe opóźnienie\n\n    // Funkcja czyszcząca dla początkowego opóźnienia\n    return () => clearTimeout(initialDelay);\n  }, []); // Uruchamia się tylko raz\n\n  // Efekt 2: Główny timer sesji (bez zmian)\n  useEffect(() => {\n    if (isReady && !isPaused && remainingTime > 0) {\n      const interval = setInterval(() => {\n        setRemainingTime(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n    if (remainingTime <= 0) {\n      navigate('/breathe');\n    }\n  }, [isReady, isPaused, remainingTime, navigate]);\n\n  // Efekt 3: ZMIANA 2 - Poprawiony timer do zmiany tekstu Inhale/Exhale\n  useEffect(() => {\n    if (isReady && !isPaused) {\n      // Resetujemy tekst do \"Inhale\" przy każdym wznowieniu, aby zapewnić synchronizację\n      setText('Inhale'); \n      const textInterval = setInterval(() => {\n        setText(prevText => (prevText === 'Inhale' ? 'Exhale' : 'Inhale'));\n      }, cycleTime / 2);\n      return () => clearInterval(textInterval);\n    }\n  }, [isReady, isPaused]); // Zależny od gotowości i pauzy\n\n  const handlePlayPause = () => {\n    if (isReady) {\n      setIsPaused(prevState => !prevState);\n    }\n  };\n\n  return (\n    <div className=\"session-screen\">\n      <BreathingAnimation \n        isPaused={isPaused} \n        isReady={isReady} \n        text={text} \n        countdown={countdown}\n      />\n      \n      <div className=\"session-screen__panel-wrapper\">\n        <ControlPanel \n          onPlayPause={handlePlayPause}\n          isPlaying={!isPaused} \n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BreathingSession;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}