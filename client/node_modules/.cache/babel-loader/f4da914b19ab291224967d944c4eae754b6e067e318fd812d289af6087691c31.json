{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'; // <-- Import\n\nimport HomeScreen from './screens/HomeScreen';\nimport BreatheScreen from './screens/BreatheScreen';\nimport BreathingSession from './screens/BreathingSession';\nimport Layout from './components/Layout';\n\n// Musimy stworzyć mały komponent pomocniczy, aby użyć hooka useLocation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedRoutes = () => {\n  _s();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n      // <-- Klucz jest niezbędny do działania animacji\n      classNames: \"fade\",\n      timeout: 500 // Musi być taki sam jak czas w CSS\n      ,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        location: location,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 27\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/breathe\",\n            element: /*#__PURE__*/_jsxDEV(BreatheScreen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/breathe/session\",\n          element: /*#__PURE__*/_jsxDEV(BreathingSession, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, location.pathname, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedRoutes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = AnimatedRoutes;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(AnimatedRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnimatedRoutes\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","useLocation","TransitionGroup","CSSTransition","HomeScreen","BreatheScreen","BreathingSession","Layout","jsxDEV","_jsxDEV","AnimatedRoutes","_s","location","children","classNames","timeout","element","fileName","_jsxFileName","lineNumber","columnNumber","path","pathname","_c","App","className","_c2","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'; // <-- Import\n\nimport HomeScreen from './screens/HomeScreen';\nimport BreatheScreen from './screens/BreatheScreen';\nimport BreathingSession from './screens/BreathingSession';\nimport Layout from './components/Layout';\n\n// Musimy stworzyć mały komponent pomocniczy, aby użyć hooka useLocation\nconst AnimatedRoutes = () => {\n  const location = useLocation();\n\n  return (\n    <TransitionGroup>\n      <CSSTransition\n        key={location.pathname} // <-- Klucz jest niezbędny do działania animacji\n        classNames=\"fade\"\n        timeout={500} // Musi być taki sam jak czas w CSS\n      >\n        <Routes location={location}>\n          {/* Owijamy ścieżki, które mają mieć ControlPanel, w Layout */}\n          <Route element={<Layout />}>\n            <Route path=\"/\" element={<HomeScreen />} />\n            <Route path=\"/breathe\" element={<BreatheScreen />} />\n            {/* Tutaj dodaj inne ekrany, które mają mieć panel */}\n          </Route>\n          \n          {/* Sesja oddechowa jest poza głównym Layoutem */}\n          <Route path=\"/breathe/session\" element={<BreathingSession />} />\n        </Routes>\n      </CSSTransition>\n    </TransitionGroup>\n  );\n};\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <AnimatedRoutes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}