{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PerspectiveShiftScreen.scss';\nimport ShatterAnimation from '../components/ShatterAnimation';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PerspectiveShiftScreen = () => {\n  _s();\n  const [step, setStep] = useState('inputNegative');\n  const [negativeThought, setNegativeThought] = useState('');\n  const [positiveThought, setPositiveThought] = useState('');\n  const [reframingQuestion, setReframingQuestion] = useState('');\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Stan do obsługi ładowania\n\n  // ZMIANA: Ta funkcja jest teraz asynchroniczna i komunikuje się z backendem\n  const handleNegativeSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return; // Nie wysyłaj pustych zapytań\n\n    setIsLoading(true);\n    setNegativeThought(input);\n    try {\n      // Wysłanie zapytania do naszego backendu w Pythonie\n      const response = await fetch('http://localhost:5001/api/get-reframing-question', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          thought: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setReframingQuestion(data.question); // Ustawiamy pytanie otrzymane od AI\n\n      setInput('');\n      setStep('inputPositive');\n    } catch (error) {\n      console.error(\"Failed to fetch reframing question:\", error);\n      // W razie błędu, użyj domyślnego pytania, aby aplikacja działała dalej\n      setReframingQuestion(\"Jak inaczej można spojrzeć na tę sytuację?\");\n      setInput('');\n      setStep('inputPositive');\n    } finally {\n      // Niezależnie od wyniku, kończymy ładowanie\n      setIsLoading(false);\n    }\n  };\n  const handlePositiveSubmit = e => {\n    e.preventDefault();\n    setPositiveThought(input);\n    setStep('animating');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"perspective-screen\",\n    children: [step === 'inputNegative' && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNegativeSubmit,\n      className: \"thought-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Jaka my\\u015Bl Ci teraz ci\\u0105\\u017Cy?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Wpisz tutaj swoj\\u0105 my\\u015Bl...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading || !input.trim(),\n        children: isLoading ? 'Analizuję...' : 'Zamknij w kuli'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), step === 'inputPositive' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-sphere\",\n        children: negativeThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePositiveSubmit,\n        className: \"thought-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: reframingQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Wpisz now\\u0105, bardziej pomocn\\u0105 my\\u015Bl...\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !input.trim(),\n          children: \"Rozbij kul\\u0119\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), step === 'animating' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ShatterAnimation, {\n        text: negativeThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"positive-thought-reveal\",\n        children: positiveThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PerspectiveShiftScreen, \"F7Bgfg2gP4uqQA5JCUoxdQZQ4HU=\");\n_c = PerspectiveShiftScreen;\nexport default PerspectiveShiftScreen;\nvar _c;\n$RefreshReg$(_c, \"PerspectiveShiftScreen\");","map":{"version":3,"names":["React","useState","ShatterAnimation","jsxDEV","_jsxDEV","Fragment","_Fragment","PerspectiveShiftScreen","_s","step","setStep","negativeThought","setNegativeThought","positiveThought","setPositiveThought","reframingQuestion","setReframingQuestion","input","setInput","isLoading","setIsLoading","handleNegativeSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","thought","ok","Error","data","json","question","error","console","handlePositiveSubmit","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","autoFocus","type","disabled","text","_c","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PerspectiveShiftScreen.scss';\nimport ShatterAnimation from '../components/ShatterAnimation';\n\nconst PerspectiveShiftScreen = () => {\n  const [step, setStep] = useState('inputNegative');\n  const [negativeThought, setNegativeThought] = useState('');\n  const [positiveThought, setPositiveThought] = useState('');\n  const [reframingQuestion, setReframingQuestion] = useState('');\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // Stan do obsługi ładowania\n\n  // ZMIANA: Ta funkcja jest teraz asynchroniczna i komunikuje się z backendem\n  const handleNegativeSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return; // Nie wysyłaj pustych zapytań\n\n    setIsLoading(true);\n    setNegativeThought(input);\n\n    try {\n      // Wysłanie zapytania do naszego backendu w Pythonie\n      const response = await fetch('http://localhost:5001/api/get-reframing-question', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ thought: input }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      setReframingQuestion(data.question); // Ustawiamy pytanie otrzymane od AI\n      \n      setInput('');\n      setStep('inputPositive');\n\n    } catch (error) {\n      console.error(\"Failed to fetch reframing question:\", error);\n      // W razie błędu, użyj domyślnego pytania, aby aplikacja działała dalej\n      setReframingQuestion(\"Jak inaczej można spojrzeć na tę sytuację?\");\n      setInput('');\n      setStep('inputPositive');\n    } finally {\n      // Niezależnie od wyniku, kończymy ładowanie\n      setIsLoading(false);\n    }\n  };\n\n  const handlePositiveSubmit = (e) => {\n    e.preventDefault();\n    setPositiveThought(input);\n    setStep('animating');\n  };\n\n  return (\n    <div className=\"perspective-screen\">\n      \n      {step === 'inputNegative' && (\n        <form onSubmit={handleNegativeSubmit} className=\"thought-form\">\n          <label>Jaka myśl Ci teraz ciąży?</label>\n          <textarea \n            value={input} \n            onChange={(e) => setInput(e.target.value)} \n            placeholder=\"Wpisz tutaj swoją myśl...\"\n            autoFocus \n          />\n          {/* Przycisk jest nieaktywny i zmienia tekst podczas ładowania */}\n          <button type=\"submit\" disabled={isLoading || !input.trim()}>\n            {isLoading ? 'Analizuję...' : 'Zamknij w kuli'}\n          </button>\n        </form>\n      )}\n\n      {step === 'inputPositive' && (\n        <>\n          <div className=\"glass-sphere\">\n            {negativeThought}\n          </div>\n          <form onSubmit={handlePositiveSubmit} className=\"thought-form\">\n            <label>{reframingQuestion}</label>\n            <textarea \n              value={input} \n              onChange={(e) => setInput(e.target.value)} \n              placeholder=\"Wpisz nową, bardziej pomocną myśl...\"\n              autoFocus \n            />\n            <button type=\"submit\" disabled={!input.trim()}>Rozbij kulę</button>\n          </form>\n        </>\n      )}\n\n      {step === 'animating' && (\n        <>\n          <ShatterAnimation text={negativeThought} />\n          <div className=\"positive-thought-reveal\">\n            {positiveThought}\n          </div>\n        </>\n      )}\n\n    </div>\n  );\n};\n\nexport default PerspectiveShiftScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}