{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './PerspectiveShiftScreen.scss';\nimport ShatterAnimation from '../components/ShatterAnimation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerspectiveShiftScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  // === GŁÓWNE STANY STERUJĄCE WIDOKIEM ===\n  const [step, setStep] = useState('initialPrompt'); // Kontroluje, na jakim etapie jest ćwiczenie\n  const [displayText, setDisplayText] = useState('Jaka myśl Ci teraz ciąży?'); // Tekst widoczny na ekranie\n  const [showInput, setShowInput] = useState(true); // Czy pokazywać pole do wpisywania\n  const [textIsVisible, setTextIsVisible] = useState(true); // Do animacji znikania/pojawiania się\n\n  // Stany przechowujące dane\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageHistory, setMessageHistory] = useState([]); // Historia dla AI\n  const [negativeThought, setNegativeThought] = useState('');\n  const [positiveThought, setPositiveThought] = useState('');\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n\n    // Krok 1: Użytkownik wysyła swoją myśl\n    const newUserMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedHistory = [...messageHistory, newUserMessage];\n    if (step === 'initialPrompt') setNegativeThought(input);\n    if (step === 'finalReframe') setPositiveThought(input);\n    setMessageHistory(updatedHistory);\n    setShowInput(false);\n    setTextIsVisible(false); // Rozpocznij animację znikania\n    setIsLoading(true);\n\n    // Czekamy na koniec animacji, zanim wyślemy zapytanie\n    setTimeout(async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/chat/perspective', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            messages: updatedHistory\n          })\n        });\n        const data = await response.json();\n        const aiMessage = {\n          role: 'assistant',\n          content: data.ai_response\n        };\n        setMessageHistory(prev => [...prev, aiMessage]);\n        setIsLoading(false);\n        setDisplayText(data.ai_response);\n        setTextIsVisible(true); // Pokaż odpowiedź AI\n\n        if (data.ai_response.includes('przeformułować')) {\n          setStep('finalReframe'); // Ustawiamy flagę ostatniego kroku\n        } else {\n          setStep('conversation');\n        }\n        setShowInput(true);\n      } catch (error) {/* ... obsługa błędu ... */}\n    }, 500); // Czas musi pasować do transition w CSS\n  };\n\n  // Logika zakończenia po wpisaniu finalnej myśli\n  useEffect(() => {\n    if (positiveThought) {\n      // Po zapisaniu myśli, czekamy chwilę i odpalamy animację\n      const timer = setTimeout(() => {\n        setStep('animating');\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [positiveThought]);\n\n  // Logika powrotu do strony głównej po animacji\n  useEffect(() => {\n    if (step === 'animating') {\n      const timer = setTimeout(() => navigate('/'), 2500); // 2.5s na animację + pokazanie wyniku\n      return () => clearTimeout(timer);\n    }\n  }, [step, navigate]);\n  if (step === 'animating') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"perspective-screen\",\n      children: [/*#__PURE__*/_jsxDEV(ShatterAnimation, {\n        text: negativeThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"positive-thought-reveal\",\n        children: positiveThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"perspective-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `display-text-area ${textIsVisible ? '' : 'hidden'}`,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thinking-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : displayText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), showInput && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"thought-form single-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Wpisz tutaj...\",\n        disabled: isLoading,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading || !input.trim(),\n        children: \"Wy\\u015Blij\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(PerspectiveShiftScreen, \"iUaw3GWem5/gOT449d0YkArTXrA=\", false, function () {\n  return [useNavigate];\n});\n_c = PerspectiveShiftScreen;\nexport default PerspectiveShiftScreen;\nvar _c;\n$RefreshReg$(_c, \"PerspectiveShiftScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ShatterAnimation","jsxDEV","_jsxDEV","PerspectiveShiftScreen","_s","navigate","step","setStep","displayText","setDisplayText","showInput","setShowInput","textIsVisible","setTextIsVisible","input","setInput","isLoading","setIsLoading","messageHistory","setMessageHistory","negativeThought","setNegativeThought","positiveThought","setPositiveThought","handleSendMessage","e","preventDefault","trim","newUserMessage","role","content","updatedHistory","setTimeout","response","fetch","method","headers","body","JSON","stringify","messages","data","json","aiMessage","ai_response","prev","includes","error","timer","clearTimeout","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","disabled","autoFocus","type","_c","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/screens/PerspectiveShiftScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './PerspectiveShiftScreen.scss';\nimport ShatterAnimation from '../components/ShatterAnimation';\n\nconst PerspectiveShiftScreen = () => {\n  const navigate = useNavigate();\n  // === GŁÓWNE STANY STERUJĄCE WIDOKIEM ===\n  const [step, setStep] = useState('initialPrompt'); // Kontroluje, na jakim etapie jest ćwiczenie\n  const [displayText, setDisplayText] = useState('Jaka myśl Ci teraz ciąży?'); // Tekst widoczny na ekranie\n  const [showInput, setShowInput] = useState(true); // Czy pokazywać pole do wpisywania\n  const [textIsVisible, setTextIsVisible] = useState(true); // Do animacji znikania/pojawiania się\n\n  // Stany przechowujące dane\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageHistory, setMessageHistory] = useState([]); // Historia dla AI\n  const [negativeThought, setNegativeThought] = useState('');\n  const [positiveThought, setPositiveThought] = useState('');\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || isLoading) return;\n\n    // Krok 1: Użytkownik wysyła swoją myśl\n    const newUserMessage = { role: 'user', content: input };\n    const updatedHistory = [...messageHistory, newUserMessage];\n    \n    if (step === 'initialPrompt') setNegativeThought(input);\n    if (step === 'finalReframe') setPositiveThought(input);\n    \n    setMessageHistory(updatedHistory);\n    setShowInput(false);\n    setTextIsVisible(false); // Rozpocznij animację znikania\n    setIsLoading(true);\n\n    // Czekamy na koniec animacji, zanim wyślemy zapytanie\n    setTimeout(async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/chat/perspective', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ messages: updatedHistory }),\n        });\n        const data = await response.json();\n        const aiMessage = { role: 'assistant', content: data.ai_response };\n        setMessageHistory(prev => [...prev, aiMessage]);\n        \n        setIsLoading(false);\n        setDisplayText(data.ai_response);\n        setTextIsVisible(true); // Pokaż odpowiedź AI\n        \n        if (data.ai_response.includes('przeformułować')) {\n          setStep('finalReframe'); // Ustawiamy flagę ostatniego kroku\n        } else {\n          setStep('conversation');\n        }\n        setShowInput(true);\n\n      } catch (error) { /* ... obsługa błędu ... */ }\n    }, 500); // Czas musi pasować do transition w CSS\n  };\n\n  // Logika zakończenia po wpisaniu finalnej myśli\n  useEffect(() => {\n    if (positiveThought) {\n      // Po zapisaniu myśli, czekamy chwilę i odpalamy animację\n      const timer = setTimeout(() => {\n        setStep('animating');\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [positiveThought]);\n  \n  // Logika powrotu do strony głównej po animacji\n  useEffect(() => {\n      if (step === 'animating') {\n          const timer = setTimeout(() => navigate('/'), 2500); // 2.5s na animację + pokazanie wyniku\n          return () => clearTimeout(timer);\n      }\n  }, [step, navigate]);\n\n  if (step === 'animating') {\n    return (\n      <div className=\"perspective-screen\">\n        <ShatterAnimation text={negativeThought} />\n        <div className=\"positive-thought-reveal\">{positiveThought}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"perspective-screen\">\n      <div className={`display-text-area ${textIsVisible ? '' : 'hidden'}`}>\n        {isLoading ? (\n          <div className=\"thinking-indicator\"><span>.</span><span>.</span><span>.</span></div>\n        ) : (\n          displayText\n        )}\n      </div>\n\n      {showInput && (\n        <form onSubmit={handleSendMessage} className=\"thought-form single-view\">\n          <textarea \n            value={input} \n            onChange={(e) => setInput(e.target.value)} \n            placeholder=\"Wpisz tutaj...\"\n            disabled={isLoading}\n            autoFocus \n          />\n          <button type=\"submit\" disabled={isLoading || !input.trim()}>Wyślij</button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default PerspectiveShiftScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}