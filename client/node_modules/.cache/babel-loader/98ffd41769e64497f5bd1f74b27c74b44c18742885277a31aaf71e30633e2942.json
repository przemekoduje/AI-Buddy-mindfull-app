{"ast":null,"code":"var _jsxFileName = \"/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/components/ControlPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './ControlPanel.scss';\n\n// Załóżmy, że mamy taką strukturę przycisków\n// W praktyce ikony byłyby importowanymi komponentami SVG lub z biblioteki\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst panelButtons = [{\n  id: 'focus',\n  path: '/focus-reset',\n  icon: '🎯'\n}, {\n  id: 'breathe',\n  path: '/breathe',\n  icon: '🧘'\n}, {\n  id: 'silence',\n  path: '/moment-of-silence',\n  icon: '🤫'\n}, {\n  id: 'perspective',\n  path: '/perspective',\n  icon: '🌌'\n}, null,\n// Puste miejsce na przycisk Play/Pause\n{\n  id: 'anchor',\n  path: '/anchor',\n  icon: '⚓️'\n}, {\n  id: 'compass',\n  path: '/daily-compass',\n  icon: '🧭'\n}, {\n  id: 'scan',\n  path: '/body-scan',\n  icon: '👤'\n}, {\n  id: 'gaze',\n  path: '/shift-your-gaze',\n  icon: '👀'\n}];\nconst ControlPanel = ({\n  onPlayPause,\n  isPlaying\n}) => {\n  _s();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: panelButtons.map((button, index) => {\n      if (index === 4) {\n        // Centralny przycisk Play/Pause\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `panel-button play-button ${isPlaying ? 'active' : ''}`,\n          onClick: onPlayPause,\n          children: \"\\u25B6\"\n        }, \"play-pause\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      }\n\n      // Zwykłe przyciski nawigacyjne\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: button.path,\n        className: `panel-button ${location.pathname === button.path ? 'active' : ''}`,\n        children: button.icon\n      }, button.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlPanel, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ControlPanel;\nexport default ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["React","useState","Link","useLocation","jsxDEV","_jsxDEV","panelButtons","id","path","icon","ControlPanel","onPlayPause","isPlaying","_s","location","className","children","map","button","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","_c","$RefreshReg$"],"sources":["/Users/przemyslawrakotny/Documents/przemokoduje/full_projects/ai-buddy-mindfull-app/client/src/components/ControlPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './ControlPanel.scss';\n\n// Załóżmy, że mamy taką strukturę przycisków\n// W praktyce ikony byłyby importowanymi komponentami SVG lub z biblioteki\nconst panelButtons = [\n  { id: 'focus', path: '/focus-reset', icon: '🎯' },\n  { id: 'breathe', path: '/breathe', icon: '🧘' },\n  { id: 'silence', path: '/moment-of-silence', icon: '🤫' },\n  { id: 'perspective', path: '/perspective', icon: '🌌' },\n  null, // Puste miejsce na przycisk Play/Pause\n  { id: 'anchor', path: '/anchor', icon: '⚓️' },\n  { id: 'compass', path: '/daily-compass', icon: '🧭' },\n  { id: 'scan', path: '/body-scan', icon: '👤' },\n  { id: 'gaze', path: '/shift-your-gaze', icon: '👀' },\n];\n\nconst ControlPanel = ({ onPlayPause, isPlaying }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"control-panel\">\n      {panelButtons.map((button, index) => {\n        if (index === 4) { // Centralny przycisk Play/Pause\n          return (\n            <button\n              key=\"play-pause\"\n              className={`panel-button play-button ${isPlaying ? 'active' : ''}`}\n              onClick={onPlayPause}\n            >\n              ▶\n            </button>\n          );\n        }\n        \n        // Zwykłe przyciski nawigacyjne\n        return (\n          <Link\n            key={button.id}\n            to={button.path}\n            className={`panel-button ${location.pathname === button.path ? 'active' : ''}`}\n          >\n            {button.icon}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ControlPanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,qBAAqB;;AAE5B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,OAAO;EAAEC,IAAI,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAK,CAAC,EACjD;EAAEF,EAAE,EAAE,SAAS;EAAEC,IAAI,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC/C;EAAEF,EAAE,EAAE,SAAS;EAAEC,IAAI,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACzD;EAAEF,EAAE,EAAE,aAAa;EAAEC,IAAI,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAK,CAAC,EACvD,IAAI;AAAE;AACN;EAAEF,EAAE,EAAE,QAAQ;EAAEC,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7C;EAAEF,EAAE,EAAE,SAAS;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACrD;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC9C;EAAEF,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAK,CAAC,CACrD;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,oBACEE,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BV,YAAY,CAACW,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MACnC,IAAIA,KAAK,KAAK,CAAC,EAAE;QAAE;QACjB,oBACEd,OAAA;UAEEU,SAAS,EAAE,4BAA4BH,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;UACnEQ,OAAO,EAAET,WAAY;UAAAK,QAAA,EACtB;QAED,GALM,YAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CAAC;MAEb;;MAEA;MACA,oBACEnB,OAAA,CAACH,IAAI;QAEHuB,EAAE,EAAEP,MAAM,CAACV,IAAK;QAChBO,SAAS,EAAE,gBAAgBD,QAAQ,CAACY,QAAQ,KAAKR,MAAM,CAACV,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAQ,QAAA,EAE9EE,MAAM,CAACT;MAAI,GAJPS,MAAM,CAACX,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CA/BIH,YAAY;EAAA,QACCP,WAAW;AAAA;AAAAwB,EAAA,GADxBjB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}